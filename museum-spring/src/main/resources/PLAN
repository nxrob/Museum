- List all art in database
    --> /
    (DONE)
    (TESTED)

- List all artists in database
    --> /artist
    (DONE)
    (TESTED)

- List all works containing a filter word (filters only through artist name and title of art)
    --> /?filter=word
    (DONE)
    (TESTED)

- List all museums
    --> /museum
    (DONE)
    (TESTED)

- List all works in a museum
    --> /museum/{museumName}
    (DONE)
    (TESTED)

- List all works by a certain artist
    --> /artist/{name}
    (DONE)
    (TESTED)

- List all works by a certain artist at a certain museum
    --> /museum/{museumName}/{artistName}
    (DONE)
    (TESTED)

- Find the location of a work of art by name
    --> /{title}/location
    (DONE)
    (TESTED)

- Find the museum with the most works of art by a given artist
    --> /artist/{name}/mostworks
    (DONE BUT WOULD LIKE TO DISPLAY COUNT ALSO)
    (TESTED)

- Find the first (last) sculpture created by a given artist
    --> /artist/{name}/oldestnewest
    (DONE)
    (TESTED)

- Find all paintings in a certain style
    --> /{style}}
    (DONE)

PRESENTATATION
--> Use of ChatGPT for data collection
--> Use of @Query to get data in a specific format out of the database
--> @Column(length)
--> List<Artist> findAll method in repository obviates the need for Iterable foreach mapping